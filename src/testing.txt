-1/4
*(nx*wx^3 + nz*wz^3 - nx*x^3 + nz*wx^2 + (nx*wx + ny*wy + 3*nz)*wz^2 + (3*nx*wx + ny*wy + nz*wz + nz)*x^2 + nx*wx + (ny*wx^2 + ny)*wy + (nz*wx^2 + 2*nx*wx + 2*ny*wy + 3*nz)*wz - (3*nx*wx^2 + 2*ny*wx*wy + nx*wz^2 + 2*nz*wx + 2*(nz*wx + nx)*wz + nx)*x - (ny*wx^2 + ny*wz^2 - 2*ny*wx*x + ny*x^2 + 2*ny*wz + ny)*y + nz)
*abs(-wy*wz + (wz + 1)*y - wy)
/(
    (pi + pi*wx^2 + pi*wy^2 + pi*wz^2 - 2*pi*wx*x + pi*x^2 - 2*pi*wy*y + pi*y^2 + 2*pi*wz)
    *sqrt(
        (wy^2 - 2*wy*y + y^2)
        /abs(wx^2 + wy^2 + wz^2 - 2*wx*x + x^2 - 2*wy*y + y^2 + 2*wz + 1)
    )
    *abs(wx^4 + wz^4 - 4*wx*x^3 + x^4 + (wx^2 + 1)*wy^2 + (2*wx^2 + wy^2 + 6)*wz^2 + 4*wz^3 + (6*wx^2 + wy^2 + 2*wz^2 + 4*wz + 2)*x^2 + (wx^2 + wz^2 - 2*wx*x + x^2 + 2*wz + 1)*y^2 + 2*wx^2 + 2*(2*wx^2 + wy^2 + 2)*wz - 2*(2*wx^3 + wx*wy^2 + 2*wx*wz^2 + 4*wx*wz + 2*wx)*x - 2*(wy*wz^2 - 2*wx*wy*x + wy*x^2 + (wx^2 + 1)*wy + 2*wy*wz)*y + 1)
    *sqrt(abs(wx^2 + wy^2 + wz^2 - 2*wx*x + x^2 - 2*wy*y + y^2 + 2*wz + 1))
)

-1/4
*(nx*wx^3 + nz*wz^3 - nx*x^3 + nz*wx^2 + (nx*wx + ny*wy + 3*nz)*wz^2 + (3*nx*wx + ny*wy + nz*wz + nz)*x^2 + nx*wx + (ny*wx^2 + ny)*wy + (nz*wx^2 + 2*nx*wx + 2*ny*wy + 3*nz)*wz - (3*nx*wx^2 + 2*ny*wx*wy + nx*wz^2 + 2*nz*wx + 2*(nz*wx + nx)*wz + nx)*x - (ny*wx^2 + ny*wz^2 - 2*ny*wx*x + ny*x^2 + 2*ny*wz + ny)*y + nz)
*abs(-wy*wz + (wz + 1)*y - wy)
/(
    (pi + pi*wx^2 + pi*wy^2 + pi*wz^2 - 2*pi*wx*x + pi*x^2 - 2*pi*wy*y + pi*y^2 + 2*pi*wz)
    *abs(wy-y)
    *abs(wx^4 + wz^4 - 4*wx*x^3 + x^4 + (wx^2 + 1)*wy^2 + (2*wx^2 + wy^2 + 6)*wz^2 + 4*wz^3 + (6*wx^2 + wy^2 + 2*wz^2 + 4*wz + 2)*x^2 + (wx^2 + wz^2 - 2*wx*x + x^2 + 2*wz + 1)*y^2 + 2*wx^2 + 2*(2*wx^2 + wy^2 + 2)*wz - 2*(2*wx^3 + wx*wy^2 + 2*wx*wz^2 + 4*wx*wz + 2*wx)*x - 2*(wy*wz^2 - 2*wx*wy*x + wy*x^2 + (wx^2 + 1)*wy + 2*wy*wz)*y + 1)
)


-1/4
*(nx*wx^3 + nz*wz^3 - nx*x^3 + nz*wx^2 + (nx*wx + ny*wy + 3*nz)*wz^2 + (3*nx*wx + ny*wy + nz*wz + nz)*x^2 + nx*wx + (ny*wx^2 + ny)*wy + (nz*wx^2 + 2*nx*wx + 2*ny*wy + 3*nz)*wz - (3*nx*wx^2 + 2*ny*wx*wy + nx*wz^2 + 2*nz*wx + 2*(nz*wx + nx)*wz + nx)*x - (ny*wx^2 + ny*wz^2 - 2*ny*wx*x + ny*x^2 + 2*ny*wz + ny)*y + nz)
*abs(-(wz + 1)*wy + (wz + 1)*y)
/(
    (pi + pi*wx^2 + pi*wy^2 + pi*wz^2 - 2*pi*wx*x + pi*x^2 - 2*pi*wy*y + pi*y^2 + 2*pi*wz)
    *abs(wy-y)
    *abs(wx^4 + wz^4 - 4*wx*x^3 + x^4 + (wx^2 + 1)*wy^2 + (2*wx^2 + wy^2 + 6)*wz^2 + 4*wz^3 + (6*wx^2 + wy^2 + 2*wz^2 + 4*wz + 2)*x^2 + (wx^2 + wz^2 - 2*wx*x + x^2 + 2*wz + 1)*y^2 + 2*wx^2 + 2*(2*wx^2 + wy^2 + 2)*wz - 2*(2*wx^3 + wx*wy^2 + 2*wx*wz^2 + 4*wx*wz + 2*wx)*x - 2*(wy*wz^2 - 2*wx*wy*x + wy*x^2 + (wx^2 + 1)*wy + 2*wy*wz)*y + 1)
)

-1/4
*(nx*wx^3 + nz*wz^3 - nx*x^3 + nz*wx^2 + (nx*wx + ny*wy + 3*nz)*wz^2 + (3*nx*wx + ny*wy + nz*wz + nz)*x^2 + nx*wx + (ny*wx^2 + ny)*wy + (nz*wx^2 + 2*nx*wx + 2*ny*wy + 3*nz)*wz - (3*nx*wx^2 + 2*ny*wx*wy + nx*wz^2 + 2*nz*wx + 2*(nz*wx + nx)*wz + nx)*x - (ny*wx^2 + ny*wz^2 - 2*ny*wx*x + ny*x^2 + 2*ny*wz + ny)*y + nz)
*abs((wz + 1)*(y-wy))
/(
    (pi + pi*wx^2 + pi*wy^2 + pi*wz^2 - 2*pi*wx*x + pi*x^2 - 2*pi*wy*y + pi*y^2 + 2*pi*wz)
    *abs(wy-y)
    *abs(wx^4 + wz^4 - 4*wx*x^3 + x^4 + (wx^2 + 1)*wy^2 + (2*wx^2 + wy^2 + 6)*wz^2 + 4*wz^3 + (6*wx^2 + wy^2 + 2*wz^2 + 4*wz + 2)*x^2 + (wx^2 + wz^2 - 2*wx*x + x^2 + 2*wz + 1)*y^2 + 2*wx^2 + 2*(2*wx^2 + wy^2 + 2)*wz - 2*(2*wx^3 + wx*wy^2 + 2*wx*wz^2 + 4*wx*wz + 2*wx)*x - 2*(wy*wz^2 - 2*wx*wy*x + wy*x^2 + (wx^2 + 1)*wy + 2*wy*wz)*y + 1)
)

-1/4
*(nx*wx^3 + nz*wz^3 - nx*x^3 + nz*wx^2 + (nx*wx + ny*wy + 3*nz)*wz^2 + (3*nx*wx + ny*wy + nz*wz + nz)*x^2 + nx*wx + (ny*wx^2 + ny)*wy + (nz*wx^2 + 2*nx*wx + 2*ny*wy + 3*nz)*wz - (3*nx*wx^2 + 2*ny*wx*wy + nx*wz^2 + 2*nz*wx + 2*(nz*wx + nx)*wz + nx)*x - (ny*wx^2 + ny*wz^2 - 2*ny*wx*x + ny*x^2 + 2*ny*wz + ny)*y + nz)
*abs(wz + 1)
*abs(y-wy)
/(
    (pi + pi*wx^2 + pi*wy^2 + pi*wz^2 - 2*pi*wx*x + pi*x^2 - 2*pi*wy*y + pi*y^2 + 2*pi*wz)
    *abs(wy-y)
    *abs(wx^4 + wz^4 - 4*wx*x^3 + x^4 + (wx^2 + 1)*wy^2 + (2*wx^2 + wy^2 + 6)*wz^2 + 4*wz^3 + (6*wx^2 + wy^2 + 2*wz^2 + 4*wz + 2)*x^2 + (wx^2 + wz^2 - 2*wx*x + x^2 + 2*wz + 1)*y^2 + 2*wx^2 + 2*(2*wx^2 + wy^2 + 2)*wz - 2*(2*wx^3 + wx*wy^2 + 2*wx*wz^2 + 4*wx*wz + 2*wx)*x - 2*(wy*wz^2 - 2*wx*wy*x + wy*x^2 + (wx^2 + 1)*wy + 2*wy*wz)*y + 1)
)

-1/4
*(nx*wx^3 + nz*wz^3 - nx*x^3 + nz*wx^2 + (nx*wx + ny*wy + 3*nz)*wz^2 + (3*nx*wx + ny*wy + nz*wz + nz)*x^2 + nx*wx + (ny*wx^2 + ny)*wy + (nz*wx^2 + 2*nx*wx + 2*ny*wy + 3*nz)*wz - (3*nx*wx^2 + 2*ny*wx*wy + nx*wz^2 + 2*nz*wx + 2*(nz*wx + nx)*wz + nx)*x - (ny*wx^2 + ny*wz^2 - 2*ny*wx*x + ny*x^2 + 2*ny*wz + ny)*y + nz)
*abs(wz + 1)
/(
    (pi + pi*wx^2 + pi*wy^2 + pi*wz^2 - 2*pi*wx*x + pi*x^2 - 2*pi*wy*y + pi*y^2 + 2*pi*wz)
    *abs(wx^4 + wz^4 - 4*wx*x^3 + x^4 + (wx^2 + 1)*wy^2 + (2*wx^2 + wy^2 + 6)*wz^2 + 4*wz^3 + (6*wx^2 + wy^2 + 2*wz^2 + 4*wz + 2)*x^2 + (wx^2 + wz^2 - 2*wx*x + x^2 + 2*wz + 1)*y^2 + 2*wx^2 + 2*(2*wx^2 + wy^2 + 2)*wz - 2*(2*wx^3 + wx*wy^2 + 2*wx*wz^2 + 4*wx*wz + 2*wx)*x - 2*(wy*wz^2 - 2*wx*wy*x + wy*x^2 + (wx^2 + 1)*wy + 2*wy*wz)*y + 1)
)









-1.0/4.0
*(nx*wx3 + nz*wz3 - nx*x3 + nz*wx2 + (nx*wx + ny*wy + 3.0*nz)*wz2 + (3.0*nx*wx + ny*wy + nz*wz + nz)*x2 + nx*wx + (ny*wx2 + ny)*wy + (nz*wx2 + 2.0*nx*wx + 2.0*ny*wy + 3.0*nz)*wz - (3.0*nx*wx2 + 2.0*ny*wx*wy + nx*wz2 + 2.0*nz*wx + 2.0*(nz*wx + nx)*wz + nx)*x - (ny*wx2 + ny*wz2 - 2.0*ny*wx*x + ny*x2 + 2.0*ny*wz + ny)*y + nz)
*(wz + 1.0)
/(
    (pi + pi*wx2 + pi*wy2 + pi*wz2 - 2.0*pi*wx*x + pi*x2 - 2.0*pi*wy*y + pi*y2 + 2.0*pi*wz)
    *abs(wx4 + wz4 - 4.0*wx*x3 + x4 + (wx2 + 1.0)*wy2 + (2.0*wx2 + wy2 + 6.0)*wz2 + 4.0*wz3 + (6.0*wx2 + wy2 + 2.0*wz2 + 4.0*wz + 2.0)*x2 + (wx2 + wz2 - 2.0*wx*x + x2 + 2.0*wz + 1.0)*y2 + 2.0*wx2 + 2.0*(2.0*wx2 + wy2 + 2.0)*wz - 2.0*(2.0*wx3 + wx*wy2 + 2.0*wx*wz2 + 4.0*wx*wz + 2.0*wx)*x - 2.0*(wy*wz2 - 2.0*wx*wy*x + wy*x2 + (wx2 + 1.0)*wy + 2.0*wy*wz)*y + 1.0)
)



precision mediump float;
varying highp vec3 fragPos;
varying highp vec3 norm;
varying highp vec2 texc;
varying highp float o;
uniform sampler2D texture;
float getAmbientLightIntegrand(vec2 xy, vec3 wpos, vec3 norm) {float pi=3.1415926535897932384626433832795;
float nx=norm.x;
float nx2=nx*nx;
float nx3=nx*nx2;
float nx4=nx*nx3;
float ny=norm.y;
float ny2=ny*ny;
float ny3=ny*ny2;
float ny4=ny*ny3;
float nz=norm.z;
float nz2=nz*nz;
float nz3=nz*nz2;
float nz4=nz*nz3;
float wx=wpos.x;
float wx2=wx*wx;
float wx3=wx*wx2;
float wx4=wx*wx3;
float wy=wpos.y;
float wy2=wy*wy;
float wy3=wy*wy2;
float wy4=wy*wy3;
float wz=wpos.z;
float wz2=wz*wz;
float wz3=wz*wz2;
float wz4=wz*wz3;
float x=xy.x;
float x2=x*x;
float x3=x*x2;
float x4=x*x3;
float y=xy.y;
float y2=y*y;
float y3=y*y2;
float y4=y*y3;
  return max(-(nx*wx3+nz*wz3-nx*x3+nz*wx2+(nx*wx+ny*wy+3.0*nz)*wz2+(3.0*nx*wx+ny*wy+nz*wz+nz)*x2+nx*wx+(ny*wx2+ny)*wy+(nz*wx2+2.0*nx*wx+2.0*ny*wy+3.0*nz)*wz-(3.0*nx*wx2+2.0*ny*wx*wy+nx*wz2+2.0*nz*wx+2.0*(nz*wx+nx)*wz+nx)*x-(ny*wx2+ny*wz2-2.0*ny*wx*x+ny*x2+2.0*ny*wz+ny)*y+nz)*(wz+1.0)/((pi+pi*wx2+pi*wy2+pi*wz2-2.0*pi*wx*x+pi*x2-2.0*pi*wy*y+pi*y2+2.0*pi*wz)*abs(wx4+wz4-4.0*wx*x3+x4+(wx2+1.0)*wy2+(2.0*wx2+wy2+6.0)*wz2+4.0*wz3+(6.0*wx2+wy2+2.0*wz2+4.0*wz+2.0)*x2+(wx2+wz2-2.0*wx*x+x2+2.0*wz+1.0)*y2+2.0*wx2+2.0*(2.0*wx2+wy2+2.0)*wz-2.0*(2.0*wx3+wx*wy2+2.0*wx*wz2+4.0*wx*wz+2.0*wx)*x-2.0*(wy*wz2-2.0*wx*wy*x+wy*x2+(wx2+1.0)*wy+2.0*wy*wz)*y+1.0))/4.0, 0);
}
float getAmbientLight(vec3 pos, vec3 normal) {
float pi=3.1415926535897932384626433832795;
  float windowRad = 0.7;
  float sum = 0.0;
  const int Width = 2;
  const int Height = 2;
  for (int i = 0;
 i < Width;
 ++i) for (int j = 0;
 j < Height;
 ++j) {    sum += getAmbientLightIntegrand(vec2(mix(-windowRad, windowRad, (float(i) + 0.5)/float(Width)), mix(-windowRad, windowRad, (float(j) + 0.5)/float(Height)), pos, normal));
  }  sum /= float(Width*Height);
  return sum;
} float getLight(float light, float occlusion) { return light - occlusion;
}void main(void) {  vec4 albedo = texture2D(texture, texc);
  if (albedo.a < 1.0) discard;
  albedo.a = 1.0;
  vec3 normal = normalize(norm);
  float ambientLight = getAmbientLight(fragPos, normal);
  vec3 diffuse = vec3(1, 1, 1)*20.0 * getLight(ambientLight, o);
  gl_FragColor = albedo * vec4(diffuse, 1);
}


vec2(mix(-windowRad, windowRad, (float(i) + 0.5)/float(Width)), mix(-windowRad, windowRad, (float(j) + 0.5)/float(Height)))